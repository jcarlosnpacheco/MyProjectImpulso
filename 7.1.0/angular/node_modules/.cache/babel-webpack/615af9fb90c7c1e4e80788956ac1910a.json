{"ast":null,"code":"import _createClass from \"C:/Users/jcarl/Downloads/MyProjectImpulso/7.1.0/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/jcarl/Downloads/MyProjectImpulso/7.1.0/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport * as i0 from '@angular/core';\nimport { NgModule, Injectable, Injector } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of, throwError } from 'rxjs';\nimport { catchError, switchMap, filter, take, map } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\n\nvar AbpModule = /*#__PURE__*/_createClass(function AbpModule() {\n  _classCallCheck(this, AbpModule);\n});\n\nAbpModule.ɵfac = function AbpModule_Factory(t) {\n  return new (t || AbpModule)();\n};\n\nAbpModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: AbpModule\n});\nAbpModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [],\n      imports: [],\n      exports: []\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar TokenService = /*#__PURE__*/function () {\n  function TokenService() {\n    _classCallCheck(this, TokenService);\n  }\n\n  _createClass(TokenService, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return abp.auth.getToken();\n    }\n  }, {\n    key: \"getTokenCookieName\",\n    value: function getTokenCookieName() {\n      return abp.auth.tokenCookieName;\n    }\n  }, {\n    key: \"clearToken\",\n    value: function clearToken() {\n      abp.auth.clearToken();\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(authToken, expireDate) {\n      abp.auth.setToken(authToken, expireDate);\n    } //refresh token\n\n  }, {\n    key: \"getRefreshToken\",\n    value: function getRefreshToken() {\n      return abp.auth.getRefreshToken();\n    }\n  }, {\n    key: \"getRefreshTokenCookieName\",\n    value: function getRefreshTokenCookieName() {\n      return abp.auth.refreshTokenCookieName;\n    }\n  }, {\n    key: \"clearRefreshToken\",\n    value: function clearRefreshToken() {\n      abp.auth.clearRefreshToken();\n    }\n  }, {\n    key: \"setRefreshToken\",\n    value: function setRefreshToken(refreshToken, expireDate) {\n      abp.auth.setRefreshToken(refreshToken, expireDate);\n    }\n  }]);\n\n  return TokenService;\n}();\n\nTokenService.ɵfac = function TokenService_Factory(t) {\n  return new (t || TokenService)();\n};\n\nTokenService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function TokenService_Factory() {\n    return new TokenService();\n  },\n  token: TokenService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TokenService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar PermissionCheckerService = /*#__PURE__*/function () {\n  function PermissionCheckerService() {\n    _classCallCheck(this, PermissionCheckerService);\n  }\n\n  _createClass(PermissionCheckerService, [{\n    key: \"isGranted\",\n    value: function isGranted(permissionName) {\n      return abp.auth.isGranted(permissionName);\n    }\n  }]);\n\n  return PermissionCheckerService;\n}();\n\nPermissionCheckerService.ɵfac = function PermissionCheckerService_Factory(t) {\n  return new (t || PermissionCheckerService)();\n};\n\nPermissionCheckerService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function PermissionCheckerService_Factory() {\n    return new PermissionCheckerService();\n  },\n  token: PermissionCheckerService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PermissionCheckerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar FeatureCheckerService = /*#__PURE__*/function () {\n  function FeatureCheckerService() {\n    _classCallCheck(this, FeatureCheckerService);\n  }\n\n  _createClass(FeatureCheckerService, [{\n    key: \"get\",\n    value: function get(featureName) {\n      return abp.features.get(featureName);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(featureName) {\n      return abp.features.getValue(featureName);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(featureName) {\n      return abp.features.isEnabled(featureName);\n    }\n  }]);\n\n  return FeatureCheckerService;\n}();\n\nFeatureCheckerService.ɵfac = function FeatureCheckerService_Factory(t) {\n  return new (t || FeatureCheckerService)();\n};\n\nFeatureCheckerService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function FeatureCheckerService_Factory() {\n    return new FeatureCheckerService();\n  },\n  token: FeatureCheckerService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FeatureCheckerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar LocalizationService = /*#__PURE__*/function () {\n  function LocalizationService() {\n    _classCallCheck(this, LocalizationService);\n  }\n\n  _createClass(LocalizationService, [{\n    key: \"languages\",\n    get: function get() {\n      return abp.localization.languages;\n    }\n  }, {\n    key: \"currentLanguage\",\n    get: function get() {\n      return abp.localization.currentLanguage;\n    }\n  }, {\n    key: \"localize\",\n    value: function localize(key, sourceName) {\n      return abp.localization.localize(key, sourceName);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource(sourceName) {\n      return abp.localization.getSource(sourceName);\n    }\n  }]);\n\n  return LocalizationService;\n}();\n\nLocalizationService.ɵfac = function LocalizationService_Factory(t) {\n  return new (t || LocalizationService)();\n};\n\nLocalizationService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function LocalizationService_Factory() {\n    return new LocalizationService();\n  },\n  token: LocalizationService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocalizationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar LogService = /*#__PURE__*/function () {\n  function LogService() {\n    _classCallCheck(this, LogService);\n  }\n\n  _createClass(LogService, [{\n    key: \"debug\",\n    value: function debug(logObject) {\n      abp.log.debug(logObject);\n    }\n  }, {\n    key: \"info\",\n    value: function info(logObject) {\n      abp.log.info(logObject);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(logObject) {\n      abp.log.warn(logObject);\n    }\n  }, {\n    key: \"error\",\n    value: function error(logObject) {\n      abp.log.error(logObject);\n    }\n  }, {\n    key: \"fatal\",\n    value: function fatal(logObject) {\n      abp.log.fatal(logObject);\n    }\n  }]);\n\n  return LogService;\n}();\n\nLogService.ɵfac = function LogService_Factory(t) {\n  return new (t || LogService)();\n};\n\nLogService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function LogService_Factory() {\n    return new LogService();\n  },\n  token: LogService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LogService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar MessageService = /*#__PURE__*/function () {\n  function MessageService() {\n    _classCallCheck(this, MessageService);\n  }\n\n  _createClass(MessageService, [{\n    key: \"info\",\n    value: function info(message, title, options) {\n      return abp.message.info(message, title, options);\n    }\n  }, {\n    key: \"success\",\n    value: function success(message, title, options) {\n      return abp.message.success(message, title, options);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message, title, options) {\n      return abp.message.warn(message, title, options);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, title, options) {\n      return abp.message.error(message, title, options);\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm(message, title, callback, options) {\n      return abp.message.confirm(message, title, callback, options);\n    }\n  }]);\n\n  return MessageService;\n}();\n\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)();\n};\n\nMessageService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function MessageService_Factory() {\n    return new MessageService();\n  },\n  token: MessageService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessageService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar AbpMultiTenancyService = /*#__PURE__*/function () {\n  function AbpMultiTenancyService() {\n    _classCallCheck(this, AbpMultiTenancyService);\n  }\n\n  _createClass(AbpMultiTenancyService, [{\n    key: \"isEnabled\",\n    get: function get() {\n      return abp.multiTenancy.isEnabled;\n    }\n  }]);\n\n  return AbpMultiTenancyService;\n}();\n\nAbpMultiTenancyService.ɵfac = function AbpMultiTenancyService_Factory(t) {\n  return new (t || AbpMultiTenancyService)();\n};\n\nAbpMultiTenancyService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function AbpMultiTenancyService_Factory() {\n    return new AbpMultiTenancyService();\n  },\n  token: AbpMultiTenancyService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpMultiTenancyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar NotifyService = /*#__PURE__*/function () {\n  function NotifyService() {\n    _classCallCheck(this, NotifyService);\n  }\n\n  _createClass(NotifyService, [{\n    key: \"info\",\n    value: function info(message, title, options) {\n      abp.notify.info(message, title, options);\n    }\n  }, {\n    key: \"success\",\n    value: function success(message, title, options) {\n      abp.notify.success(message, title, options);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message, title, options) {\n      abp.notify.warn(message, title, options);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, title, options) {\n      abp.notify.error(message, title, options);\n    }\n  }]);\n\n  return NotifyService;\n}();\n\nNotifyService.ɵfac = function NotifyService_Factory(t) {\n  return new (t || NotifyService)();\n};\n\nNotifyService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function NotifyService_Factory() {\n    return new NotifyService();\n  },\n  token: NotifyService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotifyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar AbpSessionService = /*#__PURE__*/function () {\n  function AbpSessionService() {\n    _classCallCheck(this, AbpSessionService);\n  }\n\n  _createClass(AbpSessionService, [{\n    key: \"userId\",\n    get: function get() {\n      return abp.session.userId;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return abp.session.tenantId;\n    }\n  }, {\n    key: \"impersonatorUserId\",\n    get: function get() {\n      return abp.session.impersonatorUserId;\n    }\n  }, {\n    key: \"impersonatorTenantId\",\n    get: function get() {\n      return abp.session.impersonatorTenantId;\n    }\n  }, {\n    key: \"multiTenancySide\",\n    get: function get() {\n      return abp.session.multiTenancySide;\n    }\n  }]);\n\n  return AbpSessionService;\n}();\n\nAbpSessionService.ɵfac = function AbpSessionService_Factory(t) {\n  return new (t || AbpSessionService)();\n};\n\nAbpSessionService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function AbpSessionService_Factory() {\n    return new AbpSessionService();\n  },\n  token: AbpSessionService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpSessionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar SettingService = /*#__PURE__*/function () {\n  function SettingService() {\n    _classCallCheck(this, SettingService);\n  }\n\n  _createClass(SettingService, [{\n    key: \"get\",\n    value: function get(name) {\n      return abp.setting.get(name);\n    }\n  }, {\n    key: \"getBoolean\",\n    value: function getBoolean(name) {\n      return abp.setting.getBoolean(name);\n    }\n  }, {\n    key: \"getInt\",\n    value: function getInt(name) {\n      return abp.setting.getInt(name);\n    }\n  }]);\n\n  return SettingService;\n}();\n\nSettingService.ɵfac = function SettingService_Factory(t) {\n  return new (t || SettingService)();\n};\n\nSettingService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function SettingService_Factory() {\n    return new SettingService();\n  },\n  token: SettingService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettingService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar UtilsService = /*#__PURE__*/function () {\n  function UtilsService() {\n    _classCallCheck(this, UtilsService);\n  }\n\n  _createClass(UtilsService, [{\n    key: \"getCookieValue\",\n    value: function getCookieValue(key) {\n      return abp.utils.getCookieValue(key);\n    }\n  }, {\n    key: \"setCookieValue\",\n    value: function setCookieValue(key, value, expireDate, path, domain, attributes) {\n      abp.utils.setCookieValue(key, value, expireDate, path, domain, attributes);\n    }\n  }, {\n    key: \"deleteCookie\",\n    value: function deleteCookie(key, path) {\n      abp.utils.deleteCookie(key, path);\n    }\n  }]);\n\n  return UtilsService;\n}();\n\nUtilsService.ɵfac = function UtilsService_Factory(t) {\n  return new (t || UtilsService)();\n};\n\nUtilsService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function UtilsService_Factory() {\n    return new UtilsService();\n  },\n  token: UtilsService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UtilsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar AbpUserConfigurationService = /*#__PURE__*/function () {\n  function AbpUserConfigurationService(_http) {\n    _classCallCheck(this, AbpUserConfigurationService);\n\n    this._http = _http;\n  }\n\n  _createClass(AbpUserConfigurationService, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this._http.get('/AbpUserConfiguration/GetAll').subscribe(function (result) {\n        jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\n      });\n    }\n  }]);\n\n  return AbpUserConfigurationService;\n}();\n\nAbpUserConfigurationService.ɵfac = function AbpUserConfigurationService_Factory(t) {\n  return new (t || AbpUserConfigurationService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient));\n};\n\nAbpUserConfigurationService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function AbpUserConfigurationService_Factory() {\n    return new AbpUserConfigurationService(i0.ɵɵinject(i1.HttpClient));\n  },\n  token: AbpUserConfigurationService,\n  providedIn: \"root\"\n});\n\nAbpUserConfigurationService.ctorParameters = function () {\n  return [{\n    type: HttpClient\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpUserConfigurationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HttpClient\n    }];\n  }, null);\n})();\n\nvar AbpHttpConfigurationService = /*#__PURE__*/function () {\n  function AbpHttpConfigurationService(_messageService, _logService) {\n    _classCallCheck(this, AbpHttpConfigurationService);\n\n    this._messageService = _messageService;\n    this._logService = _logService;\n    this.defaultError = {\n      message: 'An error has occurred!',\n      details: 'Error details were not sent by server.'\n    };\n    this.defaultError401 = {\n      message: 'You are not authenticated!',\n      details: 'You should be authenticated (sign in) in order to perform this operation.'\n    };\n    this.defaultError403 = {\n      message: 'You are not authorized!',\n      details: 'You are not allowed to perform this operation.'\n    };\n    this.defaultError404 = {\n      message: 'Resource not found!',\n      details: 'The resource requested could not be found on the server.'\n    };\n  }\n\n  _createClass(AbpHttpConfigurationService, [{\n    key: \"logError\",\n    value: function logError(error) {\n      this._logService.error(error);\n    }\n  }, {\n    key: \"showError\",\n    value: function showError(error) {\n      if (error.details) {\n        return this._messageService.error(error.details, error.message || this.defaultError.message);\n      } else {\n        return this._messageService.error(error.message || this.defaultError.message);\n      }\n    }\n  }, {\n    key: \"handleTargetUrl\",\n    value: function handleTargetUrl(targetUrl) {\n      if (!targetUrl) {\n        location.href = '/';\n      } else {\n        location.href = targetUrl;\n      }\n    }\n  }, {\n    key: \"handleUnAuthorizedRequest\",\n    value: function handleUnAuthorizedRequest(messagePromise, targetUrl) {\n      var _this = this;\n\n      var self = this;\n\n      if (messagePromise) {\n        messagePromise.done(function () {\n          _this.handleTargetUrl(targetUrl || '/');\n        });\n      } else {\n        self.handleTargetUrl(targetUrl || '/');\n      }\n    }\n  }, {\n    key: \"handleNonAbpErrorResponse\",\n    value: function handleNonAbpErrorResponse(response) {\n      var self = this;\n\n      switch (response.status) {\n        case 401:\n          self.handleUnAuthorizedRequest(self.showError(self.defaultError401), '/');\n          break;\n\n        case 403:\n          self.showError(self.defaultError403);\n          break;\n\n        case 404:\n          self.showError(self.defaultError404);\n          break;\n\n        default:\n          self.showError(self.defaultError);\n          break;\n      }\n    }\n  }, {\n    key: \"handleAbpResponse\",\n    value: function handleAbpResponse(response, ajaxResponse) {\n      var newResponse;\n\n      if (ajaxResponse.success) {\n        newResponse = response.clone({\n          body: ajaxResponse.result\n        });\n\n        if (ajaxResponse.targetUrl) {\n          this.handleTargetUrl(ajaxResponse.targetUrl);\n          ;\n        }\n      } else {\n        newResponse = response.clone({\n          body: ajaxResponse.result\n        });\n\n        if (!ajaxResponse.error) {\n          ajaxResponse.error = this.defaultError;\n        }\n\n        this.logError(ajaxResponse.error);\n        this.showError(ajaxResponse.error);\n\n        if (response.status === 401) {\n          this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\n        }\n      }\n\n      return newResponse;\n    }\n  }, {\n    key: \"getAbpAjaxResponseOrNull\",\n    value: function getAbpAjaxResponseOrNull(response) {\n      if (!response || !response.headers) {\n        return null;\n      }\n\n      var contentType = response.headers.get('Content-Type');\n\n      if (!contentType) {\n        this._logService.warn('Content-Type is not sent!');\n\n        return null;\n      }\n\n      if (contentType.indexOf(\"application/json\") < 0) {\n        this._logService.warn('Content-Type is not application/json: ' + contentType);\n\n        return null;\n      }\n\n      var responseObj = JSON.parse(JSON.stringify(response.body));\n\n      if (!responseObj.__abp) {\n        return null;\n      }\n\n      return responseObj;\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response) {\n      var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\n\n      if (ajaxResponse == null) {\n        return response;\n      }\n\n      return this.handleAbpResponse(response, ajaxResponse);\n    }\n  }, {\n    key: \"blobToText\",\n    value: function blobToText(blob) {\n      return new Observable(function (observer) {\n        if (!blob) {\n          observer.next(\"\");\n          observer.complete();\n        } else {\n          var reader = new FileReader();\n\n          reader.onload = function () {\n            observer.next(this.result);\n            observer.complete();\n          };\n\n          reader.readAsText(blob);\n        }\n      });\n    }\n  }]);\n\n  return AbpHttpConfigurationService;\n}();\n\nAbpHttpConfigurationService.ɵfac = function AbpHttpConfigurationService_Factory(t) {\n  return new (t || AbpHttpConfigurationService)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(LogService));\n};\n\nAbpHttpConfigurationService.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function AbpHttpConfigurationService_Factory() {\n    return new AbpHttpConfigurationService(i0.ɵɵinject(MessageService), i0.ɵɵinject(LogService));\n  },\n  token: AbpHttpConfigurationService,\n  providedIn: \"root\"\n});\n\nAbpHttpConfigurationService.ctorParameters = function () {\n  return [{\n    type: MessageService\n  }, {\n    type: LogService\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpConfigurationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MessageService\n    }, {\n      type: LogService\n    }];\n  }, null);\n})();\n\nvar RefreshTokenService = /*#__PURE__*/_createClass(function RefreshTokenService() {\n  _classCallCheck(this, RefreshTokenService);\n});\n\nRefreshTokenService.ɵfac = function RefreshTokenService_Factory(t) {\n  return new (t || RefreshTokenService)();\n};\n\nRefreshTokenService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: RefreshTokenService,\n  factory: RefreshTokenService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RefreshTokenService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar AbpHttpInterceptor = /*#__PURE__*/function () {\n  function AbpHttpInterceptor(configuration, _injector) {\n    _classCallCheck(this, AbpHttpInterceptor);\n\n    this._injector = _injector;\n    this._tokenService = new TokenService();\n    this._utilsService = new UtilsService();\n    this._logService = new LogService();\n    this.isRefreshing = false;\n    this.refreshTokenSubject = new BehaviorSubject(null);\n    this.configuration = configuration;\n  }\n\n  _createClass(AbpHttpInterceptor, [{\n    key: \"intercept\",\n    value: function intercept(request, next) {\n      var _this2 = this;\n\n      var modifiedRequest = this.normalizeRequestHeaders(request);\n      return next.handle(modifiedRequest).pipe(catchError(function (error) {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          return _this2.tryAuthWithRefreshToken(request, next, error);\n        } else {\n          return _this2.handleErrorResponse(error);\n        }\n      }), switchMap(function (event) {\n        return _this2.handleSuccessResponse(event);\n      }));\n    }\n  }, {\n    key: \"tryGetRefreshTokenService\",\n    value: function tryGetRefreshTokenService() {\n      var _refreshTokenService = this._injector.get(RefreshTokenService, null);\n\n      if (_refreshTokenService) {\n        return _refreshTokenService.tryAuthWithRefreshToken();\n      }\n\n      return of(false);\n    }\n  }, {\n    key: \"tryAuthWithRefreshToken\",\n    value: function tryAuthWithRefreshToken(request, next, error) {\n      var _this3 = this;\n\n      if (!this.isRefreshing) {\n        this.isRefreshing = true;\n        this.refreshTokenSubject.next(null);\n        return this.tryGetRefreshTokenService().pipe(switchMap(function (authResult) {\n          _this3.isRefreshing = false;\n\n          if (authResult) {\n            _this3.refreshTokenSubject.next(authResult);\n\n            var modifiedRequest = _this3.normalizeRequestHeaders(request);\n\n            return next.handle(modifiedRequest);\n          } else {\n            return _this3.handleErrorResponse(error);\n          }\n        }));\n      } else {\n        return this.refreshTokenSubject.pipe(filter(function (authResult) {\n          return authResult != null;\n        }), take(1), switchMap(function (authResult) {\n          var modifiedRequest = _this3.normalizeRequestHeaders(request);\n\n          return next.handle(modifiedRequest);\n        }));\n      }\n    }\n  }, {\n    key: \"normalizeRequestHeaders\",\n    value: function normalizeRequestHeaders(request) {\n      var modifiedHeaders = new HttpHeaders();\n      modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\").set(\"Cache-Control\", \"no-cache\").set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\n      modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\n      modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\n      modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\n      modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\n      modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\n      return request.clone({\n        headers: modifiedHeaders\n      });\n    }\n  }, {\n    key: \"addXRequestedWithHeader\",\n    value: function addXRequestedWithHeader(headers) {\n      if (headers) {\n        headers = headers.set('X-Requested-With', 'XMLHttpRequest');\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addAspNetCoreCultureHeader\",\n    value: function addAspNetCoreCultureHeader(headers) {\n      var cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\n\n      if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\n        headers = headers.set('.AspNetCore.Culture', cookieLangValue);\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addAcceptLanguageHeader\",\n    value: function addAcceptLanguageHeader(headers) {\n      var cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\n\n      if (cookieLangValue && headers && !headers.has('Accept-Language')) {\n        headers = headers.set('Accept-Language', cookieLangValue);\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addTenantIdHeader\",\n    value: function addTenantIdHeader(headers) {\n      var cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\n\n      if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\n        headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addAuthorizationHeaders\",\n    value: function addAuthorizationHeaders(headers) {\n      var authorizationHeaders = headers ? headers.getAll('Authorization') : null;\n\n      if (!authorizationHeaders) {\n        authorizationHeaders = [];\n      }\n\n      if (!this.itemExists(authorizationHeaders, function (item) {\n        return item.indexOf('Bearer ') == 0;\n      })) {\n        var token = this._tokenService.getToken();\n\n        if (headers && token) {\n          headers = headers.set('Authorization', 'Bearer ' + token);\n        }\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"handleSuccessResponse\",\n    value: function handleSuccessResponse(event) {\n      var self = this;\n\n      if (event instanceof HttpResponse) {\n        if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\n          return self.configuration.blobToText(event.body).pipe(map(function (json) {\n            var responseBody = json == \"null\" ? {} : JSON.parse(json);\n            var modifiedResponse = self.configuration.handleResponse(event.clone({\n              body: responseBody\n            }));\n            return modifiedResponse.clone({\n              body: new Blob([JSON.stringify(modifiedResponse.body)], {\n                type: 'application/json'\n              })\n            });\n          }));\n        }\n      }\n\n      return of(event);\n    }\n  }, {\n    key: \"handleErrorResponse\",\n    value: function handleErrorResponse(error) {\n      var _this4 = this;\n\n      if (!(error.error instanceof Blob)) {\n        return throwError(error);\n      }\n\n      return this.configuration.blobToText(error.error).pipe(switchMap(function (json) {\n        var errorBody = json == \"\" || json == \"null\" ? {} : JSON.parse(json);\n        var errorResponse = new HttpResponse({\n          headers: error.headers,\n          status: error.status,\n          body: errorBody\n        });\n\n        var ajaxResponse = _this4.configuration.getAbpAjaxResponseOrNull(errorResponse);\n\n        if (ajaxResponse != null) {\n          _this4.configuration.handleAbpResponse(errorResponse, ajaxResponse);\n        } else {\n          _this4.configuration.handleNonAbpErrorResponse(errorResponse);\n        }\n\n        return throwError(error);\n      }));\n    }\n  }, {\n    key: \"itemExists\",\n    value: function itemExists(items, predicate) {\n      for (var i = 0; i < items.length; i++) {\n        if (predicate(items[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return AbpHttpInterceptor;\n}();\n\nAbpHttpInterceptor.ɵfac = function AbpHttpInterceptor_Factory(t) {\n  return new (t || AbpHttpInterceptor)(ɵngcc0.ɵɵinject(AbpHttpConfigurationService), ɵngcc0.ɵɵinject(ɵngcc0.Injector));\n};\n\nAbpHttpInterceptor.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: AbpHttpInterceptor,\n  factory: AbpHttpInterceptor.ɵfac\n});\n\nAbpHttpInterceptor.ctorParameters = function () {\n  return [{\n    type: AbpHttpConfigurationService\n  }, {\n    type: Injector\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: AbpHttpConfigurationService\n    }, {\n      type: ɵngcc0.Injector\n    }];\n  }, null);\n})();\n/*\r\n * Public API Surface of abp-ng2-module\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AbpHttpConfigurationService, AbpHttpInterceptor, AbpModule, AbpMultiTenancyService, AbpSessionService, AbpUserConfigurationService, FeatureCheckerService, LocalizationService, LogService, MessageService, NotifyService, PermissionCheckerService, RefreshTokenService, SettingService, TokenService, UtilsService }; //# sourceMappingURL=abp-ng2-module.js.map","map":{"version":3,"sources":["C:/Users/jcarl/Downloads/MyProjectImpulso/7.1.0/angular/node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js"],"names":["i0","NgModule","Injectable","Injector","i1","HttpClient","HttpErrorResponse","HttpHeaders","HttpResponse","Observable","BehaviorSubject","of","throwError","catchError","switchMap","filter","take","map","ɵngcc0","ɵngcc1","AbpModule","ɵfac","AbpModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ngDevMode","ɵsetClassMetadata","args","declarations","exports","TokenService","abp","auth","getToken","tokenCookieName","clearToken","authToken","expireDate","setToken","getRefreshToken","refreshTokenCookieName","clearRefreshToken","refreshToken","setRefreshToken","TokenService_Factory","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","PermissionCheckerService","permissionName","isGranted","PermissionCheckerService_Factory","FeatureCheckerService","featureName","features","get","getValue","isEnabled","FeatureCheckerService_Factory","LocalizationService","localization","languages","currentLanguage","key","sourceName","localize","getSource","LocalizationService_Factory","LogService","logObject","log","debug","info","warn","error","fatal","LogService_Factory","MessageService","message","title","options","success","callback","confirm","MessageService_Factory","AbpMultiTenancyService","multiTenancy","AbpMultiTenancyService_Factory","NotifyService","notify","NotifyService_Factory","AbpSessionService","session","userId","tenantId","impersonatorUserId","impersonatorTenantId","multiTenancySide","AbpSessionService_Factory","SettingService","name","setting","getBoolean","getInt","SettingService_Factory","UtilsService","utils","getCookieValue","value","path","domain","attributes","setCookieValue","deleteCookie","UtilsService_Factory","AbpUserConfigurationService","_http","subscribe","result","jQuery","extend","JSON","parse","stringify","AbpUserConfigurationService_Factory","ɵɵinject","ctorParameters","AbpHttpConfigurationService","_messageService","_logService","defaultError","details","defaultError401","defaultError403","defaultError404","targetUrl","location","href","messagePromise","self","done","handleTargetUrl","response","status","handleUnAuthorizedRequest","showError","ajaxResponse","newResponse","clone","body","logError","headers","contentType","indexOf","responseObj","__abp","getAbpAjaxResponseOrNull","handleAbpResponse","blob","observer","next","complete","reader","FileReader","onload","readAsText","AbpHttpConfigurationService_Factory","RefreshTokenService","RefreshTokenService_Factory","AbpHttpInterceptor","configuration","_injector","_tokenService","_utilsService","isRefreshing","refreshTokenSubject","request","modifiedRequest","normalizeRequestHeaders","handle","pipe","tryAuthWithRefreshToken","handleErrorResponse","event","handleSuccessResponse","_refreshTokenService","tryGetRefreshTokenService","authResult","modifiedHeaders","set","addXRequestedWithHeader","addAuthorizationHeaders","addAspNetCoreCultureHeader","addAcceptLanguageHeader","addTenantIdHeader","cookieLangValue","has","cookieTenantIdValue","tenantIdCookieName","authorizationHeaders","getAll","itemExists","item","Blob","blobToText","json","responseBody","modifiedResponse","handleResponse","errorBody","errorResponse","handleNonAbpErrorResponse","items","predicate","i","length","AbpHttpInterceptor_Factory"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule, Injectable, Injector } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of, throwError } from 'rxjs';\nimport { catchError, switchMap, filter, take, map } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nclass AbpModule {\r\n}\nAbpModule.ɵfac = function AbpModule_Factory(t) { return new (t || AbpModule)(); };\nAbpModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AbpModule });\nAbpModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [],\n                imports: [],\n                exports: []\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass TokenService {\r\n    getToken() {\r\n        return abp.auth.getToken();\r\n    }\r\n    getTokenCookieName() {\r\n        return abp.auth.tokenCookieName;\r\n    }\r\n    clearToken() {\r\n        abp.auth.clearToken();\r\n    }\r\n    setToken(authToken, expireDate) {\r\n        abp.auth.setToken(authToken, expireDate);\r\n    }\r\n    //refresh token\r\n    getRefreshToken() {\r\n        return abp.auth.getRefreshToken();\r\n    }\r\n    getRefreshTokenCookieName() {\r\n        return abp.auth.refreshTokenCookieName;\r\n    }\r\n    clearRefreshToken() {\r\n        abp.auth.clearRefreshToken();\r\n    }\r\n    setRefreshToken(refreshToken, expireDate) {\r\n        abp.auth.setRefreshToken(refreshToken, expireDate);\r\n    }\r\n}\nTokenService.ɵfac = function TokenService_Factory(t) { return new (t || TokenService)(); };\r\nTokenService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TokenService_Factory() { return new TokenService(); }, token: TokenService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TokenService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass PermissionCheckerService {\r\n    isGranted(permissionName) {\r\n        return abp.auth.isGranted(permissionName);\r\n    }\r\n}\nPermissionCheckerService.ɵfac = function PermissionCheckerService_Factory(t) { return new (t || PermissionCheckerService)(); };\r\nPermissionCheckerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PermissionCheckerService_Factory() { return new PermissionCheckerService(); }, token: PermissionCheckerService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PermissionCheckerService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass FeatureCheckerService {\r\n    get(featureName) {\r\n        return abp.features.get(featureName);\r\n    }\r\n    getValue(featureName) {\r\n        return abp.features.getValue(featureName);\r\n    }\r\n    isEnabled(featureName) {\r\n        return abp.features.isEnabled(featureName);\r\n    }\r\n}\nFeatureCheckerService.ɵfac = function FeatureCheckerService_Factory(t) { return new (t || FeatureCheckerService)(); };\r\nFeatureCheckerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function FeatureCheckerService_Factory() { return new FeatureCheckerService(); }, token: FeatureCheckerService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FeatureCheckerService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass LocalizationService {\r\n    get languages() {\r\n        return abp.localization.languages;\r\n    }\r\n    get currentLanguage() {\r\n        return abp.localization.currentLanguage;\r\n    }\r\n    localize(key, sourceName) {\r\n        return abp.localization.localize(key, sourceName);\r\n    }\r\n    getSource(sourceName) {\r\n        return abp.localization.getSource(sourceName);\r\n    }\r\n}\nLocalizationService.ɵfac = function LocalizationService_Factory(t) { return new (t || LocalizationService)(); };\r\nLocalizationService.ɵprov = i0.ɵɵdefineInjectable({ factory: function LocalizationService_Factory() { return new LocalizationService(); }, token: LocalizationService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocalizationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass LogService {\r\n    debug(logObject) {\r\n        abp.log.debug(logObject);\r\n    }\r\n    info(logObject) {\r\n        abp.log.info(logObject);\r\n    }\r\n    warn(logObject) {\r\n        abp.log.warn(logObject);\r\n    }\r\n    error(logObject) {\r\n        abp.log.error(logObject);\r\n    }\r\n    fatal(logObject) {\r\n        abp.log.fatal(logObject);\r\n    }\r\n}\nLogService.ɵfac = function LogService_Factory(t) { return new (t || LogService)(); };\r\nLogService.ɵprov = i0.ɵɵdefineInjectable({ factory: function LogService_Factory() { return new LogService(); }, token: LogService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LogService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass MessageService {\r\n    info(message, title, options) {\r\n        return abp.message.info(message, title, options);\r\n    }\r\n    success(message, title, options) {\r\n        return abp.message.success(message, title, options);\r\n    }\r\n    warn(message, title, options) {\r\n        return abp.message.warn(message, title, options);\r\n    }\r\n    error(message, title, options) {\r\n        return abp.message.error(message, title, options);\r\n    }\r\n    confirm(message, title, callback, options) {\r\n        return abp.message.confirm(message, title, callback, options);\r\n    }\r\n}\nMessageService.ɵfac = function MessageService_Factory(t) { return new (t || MessageService)(); };\r\nMessageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function MessageService_Factory() { return new MessageService(); }, token: MessageService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessageService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass AbpMultiTenancyService {\r\n    get isEnabled() {\r\n        return abp.multiTenancy.isEnabled;\r\n    }\r\n}\nAbpMultiTenancyService.ɵfac = function AbpMultiTenancyService_Factory(t) { return new (t || AbpMultiTenancyService)(); };\r\nAbpMultiTenancyService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AbpMultiTenancyService_Factory() { return new AbpMultiTenancyService(); }, token: AbpMultiTenancyService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpMultiTenancyService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass NotifyService {\r\n    info(message, title, options) {\r\n        abp.notify.info(message, title, options);\r\n    }\r\n    success(message, title, options) {\r\n        abp.notify.success(message, title, options);\r\n    }\r\n    warn(message, title, options) {\r\n        abp.notify.warn(message, title, options);\r\n    }\r\n    error(message, title, options) {\r\n        abp.notify.error(message, title, options);\r\n    }\r\n}\nNotifyService.ɵfac = function NotifyService_Factory(t) { return new (t || NotifyService)(); };\r\nNotifyService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NotifyService_Factory() { return new NotifyService(); }, token: NotifyService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotifyService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass AbpSessionService {\r\n    get userId() {\r\n        return abp.session.userId;\r\n    }\r\n    get tenantId() {\r\n        return abp.session.tenantId;\r\n    }\r\n    get impersonatorUserId() {\r\n        return abp.session.impersonatorUserId;\r\n    }\r\n    get impersonatorTenantId() {\r\n        return abp.session.impersonatorTenantId;\r\n    }\r\n    get multiTenancySide() {\r\n        return abp.session.multiTenancySide;\r\n    }\r\n}\nAbpSessionService.ɵfac = function AbpSessionService_Factory(t) { return new (t || AbpSessionService)(); };\r\nAbpSessionService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AbpSessionService_Factory() { return new AbpSessionService(); }, token: AbpSessionService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpSessionService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass SettingService {\r\n    get(name) {\r\n        return abp.setting.get(name);\r\n    }\r\n    getBoolean(name) {\r\n        return abp.setting.getBoolean(name);\r\n    }\r\n    getInt(name) {\r\n        return abp.setting.getInt(name);\r\n    }\r\n}\nSettingService.ɵfac = function SettingService_Factory(t) { return new (t || SettingService)(); };\r\nSettingService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SettingService_Factory() { return new SettingService(); }, token: SettingService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettingService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass UtilsService {\r\n    getCookieValue(key) {\r\n        return abp.utils.getCookieValue(key);\r\n    }\r\n    setCookieValue(key, value, expireDate, path, domain, attributes) {\r\n        abp.utils.setCookieValue(key, value, expireDate, path, domain, attributes);\r\n    }\r\n    deleteCookie(key, path) {\r\n        abp.utils.deleteCookie(key, path);\r\n    }\r\n}\nUtilsService.ɵfac = function UtilsService_Factory(t) { return new (t || UtilsService)(); };\r\nUtilsService.ɵprov = i0.ɵɵdefineInjectable({ factory: function UtilsService_Factory() { return new UtilsService(); }, token: UtilsService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UtilsService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass AbpUserConfigurationService {\r\n    constructor(_http) {\r\n        this._http = _http;\r\n    }\r\n    initialize() {\r\n        this._http.get('/AbpUserConfiguration/GetAll')\r\n            .subscribe(result => {\r\n            jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\r\n        });\r\n    }\r\n}\nAbpUserConfigurationService.ɵfac = function AbpUserConfigurationService_Factory(t) { return new (t || AbpUserConfigurationService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };\r\nAbpUserConfigurationService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AbpUserConfigurationService_Factory() { return new AbpUserConfigurationService(i0.ɵɵinject(i1.HttpClient)); }, token: AbpUserConfigurationService, providedIn: \"root\" });\r\nAbpUserConfigurationService.ctorParameters = () => [\r\n    { type: HttpClient }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpUserConfigurationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();\n\nclass AbpHttpConfigurationService {\r\n    constructor(_messageService, _logService) {\r\n        this._messageService = _messageService;\r\n        this._logService = _logService;\r\n        this.defaultError = {\r\n            message: 'An error has occurred!',\r\n            details: 'Error details were not sent by server.'\r\n        };\r\n        this.defaultError401 = {\r\n            message: 'You are not authenticated!',\r\n            details: 'You should be authenticated (sign in) in order to perform this operation.'\r\n        };\r\n        this.defaultError403 = {\r\n            message: 'You are not authorized!',\r\n            details: 'You are not allowed to perform this operation.'\r\n        };\r\n        this.defaultError404 = {\r\n            message: 'Resource not found!',\r\n            details: 'The resource requested could not be found on the server.'\r\n        };\r\n    }\r\n    logError(error) {\r\n        this._logService.error(error);\r\n    }\r\n    showError(error) {\r\n        if (error.details) {\r\n            return this._messageService.error(error.details, error.message || this.defaultError.message);\r\n        }\r\n        else {\r\n            return this._messageService.error(error.message || this.defaultError.message);\r\n        }\r\n    }\r\n    handleTargetUrl(targetUrl) {\r\n        if (!targetUrl) {\r\n            location.href = '/';\r\n        }\r\n        else {\r\n            location.href = targetUrl;\r\n        }\r\n    }\r\n    handleUnAuthorizedRequest(messagePromise, targetUrl) {\r\n        const self = this;\r\n        if (messagePromise) {\r\n            messagePromise.done(() => {\r\n                this.handleTargetUrl(targetUrl || '/');\r\n            });\r\n        }\r\n        else {\r\n            self.handleTargetUrl(targetUrl || '/');\r\n        }\r\n    }\r\n    handleNonAbpErrorResponse(response) {\r\n        const self = this;\r\n        switch (response.status) {\r\n            case 401:\r\n                self.handleUnAuthorizedRequest(self.showError(self.defaultError401), '/');\r\n                break;\r\n            case 403:\r\n                self.showError(self.defaultError403);\r\n                break;\r\n            case 404:\r\n                self.showError(self.defaultError404);\r\n                break;\r\n            default:\r\n                self.showError(self.defaultError);\r\n                break;\r\n        }\r\n    }\r\n    handleAbpResponse(response, ajaxResponse) {\r\n        var newResponse;\r\n        if (ajaxResponse.success) {\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n            if (ajaxResponse.targetUrl) {\r\n                this.handleTargetUrl(ajaxResponse.targetUrl);\r\n                ;\r\n            }\r\n        }\r\n        else {\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n            if (!ajaxResponse.error) {\r\n                ajaxResponse.error = this.defaultError;\r\n            }\r\n            this.logError(ajaxResponse.error);\r\n            this.showError(ajaxResponse.error);\r\n            if (response.status === 401) {\r\n                this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\r\n            }\r\n        }\r\n        return newResponse;\r\n    }\r\n    getAbpAjaxResponseOrNull(response) {\r\n        if (!response || !response.headers) {\r\n            return null;\r\n        }\r\n        var contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n            this._logService.warn('Content-Type is not sent!');\r\n            return null;\r\n        }\r\n        if (contentType.indexOf(\"application/json\") < 0) {\r\n            this._logService.warn('Content-Type is not application/json: ' + contentType);\r\n            return null;\r\n        }\r\n        var responseObj = JSON.parse(JSON.stringify(response.body));\r\n        if (!responseObj.__abp) {\r\n            return null;\r\n        }\r\n        return responseObj;\r\n    }\r\n    handleResponse(response) {\r\n        var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\r\n        if (ajaxResponse == null) {\r\n            return response;\r\n        }\r\n        return this.handleAbpResponse(response, ajaxResponse);\r\n    }\r\n    blobToText(blob) {\r\n        return new Observable((observer) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            }\r\n            else {\r\n                let reader = new FileReader();\r\n                reader.onload = function () {\r\n                    observer.next(this.result);\r\n                    observer.complete();\r\n                };\r\n                reader.readAsText(blob);\r\n            }\r\n        });\r\n    }\r\n}\nAbpHttpConfigurationService.ɵfac = function AbpHttpConfigurationService_Factory(t) { return new (t || AbpHttpConfigurationService)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(LogService)); };\r\nAbpHttpConfigurationService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AbpHttpConfigurationService_Factory() { return new AbpHttpConfigurationService(i0.ɵɵinject(MessageService), i0.ɵɵinject(LogService)); }, token: AbpHttpConfigurationService, providedIn: \"root\" });\r\nAbpHttpConfigurationService.ctorParameters = () => [\r\n    { type: MessageService },\r\n    { type: LogService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpConfigurationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: MessageService }, { type: LogService }]; }, null); })();\n\nclass RefreshTokenService {\r\n}\nRefreshTokenService.ɵfac = function RefreshTokenService_Factory(t) { return new (t || RefreshTokenService)(); };\nRefreshTokenService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: RefreshTokenService, factory: RefreshTokenService.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RefreshTokenService, [{\n        type: Injectable\n    }], null, null); })();\n\nclass AbpHttpInterceptor {\r\n    constructor(configuration, _injector) {\r\n        this._injector = _injector;\r\n        this._tokenService = new TokenService();\r\n        this._utilsService = new UtilsService();\r\n        this._logService = new LogService();\r\n        this.isRefreshing = false;\r\n        this.refreshTokenSubject = new BehaviorSubject(null);\r\n        this.configuration = configuration;\r\n    }\r\n    intercept(request, next) {\r\n        var modifiedRequest = this.normalizeRequestHeaders(request);\r\n        return next.handle(modifiedRequest)\r\n            .pipe(catchError(error => {\r\n            if (error instanceof HttpErrorResponse && error.status === 401) {\r\n                return this.tryAuthWithRefreshToken(request, next, error);\r\n            }\r\n            else {\r\n                return this.handleErrorResponse(error);\r\n            }\r\n        }), switchMap((event) => {\r\n            return this.handleSuccessResponse(event);\r\n        }));\r\n    }\r\n    tryGetRefreshTokenService() {\r\n        var _refreshTokenService = this._injector.get(RefreshTokenService, null);\r\n        if (_refreshTokenService) {\r\n            return _refreshTokenService.tryAuthWithRefreshToken();\r\n        }\r\n        return of(false);\r\n    }\r\n    tryAuthWithRefreshToken(request, next, error) {\r\n        if (!this.isRefreshing) {\r\n            this.isRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n            return this.tryGetRefreshTokenService().pipe(switchMap((authResult) => {\r\n                this.isRefreshing = false;\r\n                if (authResult) {\r\n                    this.refreshTokenSubject.next(authResult);\r\n                    let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                    return next.handle(modifiedRequest);\r\n                }\r\n                else {\r\n                    return this.handleErrorResponse(error);\r\n                }\r\n            }));\r\n        }\r\n        else {\r\n            return this.refreshTokenSubject.pipe(filter(authResult => authResult != null), take(1), switchMap(authResult => {\r\n                let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                return next.handle(modifiedRequest);\r\n            }));\r\n        }\r\n    }\r\n    normalizeRequestHeaders(request) {\r\n        var modifiedHeaders = new HttpHeaders();\r\n        modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\")\r\n            .set(\"Cache-Control\", \"no-cache\")\r\n            .set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\r\n        modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\r\n        modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\r\n        return request.clone({\r\n            headers: modifiedHeaders\r\n        });\r\n    }\r\n    addXRequestedWithHeader(headers) {\r\n        if (headers) {\r\n            headers = headers.set('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        return headers;\r\n    }\r\n    addAspNetCoreCultureHeader(headers) {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\r\n            headers = headers.set('.AspNetCore.Culture', cookieLangValue);\r\n        }\r\n        return headers;\r\n    }\r\n    addAcceptLanguageHeader(headers) {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('Accept-Language')) {\r\n            headers = headers.set('Accept-Language', cookieLangValue);\r\n        }\r\n        return headers;\r\n    }\r\n    addTenantIdHeader(headers) {\r\n        let cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\r\n        if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\r\n            headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\r\n        }\r\n        return headers;\r\n    }\r\n    addAuthorizationHeaders(headers) {\r\n        let authorizationHeaders = headers ? headers.getAll('Authorization') : null;\r\n        if (!authorizationHeaders) {\r\n            authorizationHeaders = [];\r\n        }\r\n        if (!this.itemExists(authorizationHeaders, (item) => item.indexOf('Bearer ') == 0)) {\r\n            let token = this._tokenService.getToken();\r\n            if (headers && token) {\r\n                headers = headers.set('Authorization', 'Bearer ' + token);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n    handleSuccessResponse(event) {\r\n        var self = this;\r\n        if (event instanceof HttpResponse) {\r\n            if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\r\n                return self.configuration.blobToText(event.body).pipe(map(json => {\r\n                    const responseBody = json == \"null\" ? {} : JSON.parse(json);\r\n                    var modifiedResponse = self.configuration.handleResponse(event.clone({\r\n                        body: responseBody\r\n                    }));\r\n                    return modifiedResponse.clone({\r\n                        body: new Blob([JSON.stringify(modifiedResponse.body)], { type: 'application/json' })\r\n                    });\r\n                }));\r\n            }\r\n        }\r\n        return of(event);\r\n    }\r\n    handleErrorResponse(error) {\r\n        if (!(error.error instanceof Blob)) {\r\n            return throwError(error);\r\n        }\r\n        return this.configuration.blobToText(error.error).pipe(switchMap((json) => {\r\n            const errorBody = (json == \"\" || json == \"null\") ? {} : JSON.parse(json);\r\n            const errorResponse = new HttpResponse({\r\n                headers: error.headers,\r\n                status: error.status,\r\n                body: errorBody\r\n            });\r\n            var ajaxResponse = this.configuration.getAbpAjaxResponseOrNull(errorResponse);\r\n            if (ajaxResponse != null) {\r\n                this.configuration.handleAbpResponse(errorResponse, ajaxResponse);\r\n            }\r\n            else {\r\n                this.configuration.handleNonAbpErrorResponse(errorResponse);\r\n            }\r\n            return throwError(error);\r\n        }));\r\n    }\r\n    itemExists(items, predicate) {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\nAbpHttpInterceptor.ɵfac = function AbpHttpInterceptor_Factory(t) { return new (t || AbpHttpInterceptor)(ɵngcc0.ɵɵinject(AbpHttpConfigurationService), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nAbpHttpInterceptor.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AbpHttpInterceptor, factory: AbpHttpInterceptor.ɵfac });\r\nAbpHttpInterceptor.ctorParameters = () => [\r\n    { type: AbpHttpConfigurationService },\r\n    { type: Injector }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: AbpHttpConfigurationService }, { type: ɵngcc0.Injector }]; }, null); })();\n\n/*\r\n * Public API Surface of abp-ng2-module\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AbpHttpConfigurationService, AbpHttpInterceptor, AbpModule, AbpMultiTenancyService, AbpSessionService, AbpUserConfigurationService, FeatureCheckerService, LocalizationService, LogService, MessageService, NotifyService, PermissionCheckerService, RefreshTokenService, SettingService, TokenService, UtilsService };\n\n//# sourceMappingURL=abp-ng2-module.js.map"]},"metadata":{},"sourceType":"module"}